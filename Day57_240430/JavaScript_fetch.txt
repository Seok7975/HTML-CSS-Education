[JS]

1. fetch 사용법
fetch() 함수는 첫번째 인자로 URL, 
두번째 인자로 옵션 객체를 받고, 
Promise 타입의 객체를 반환합니다. 
반환된 객체는 API 호출이 성공했을 경우에는 응답(response) 객체를 resolve하고, 
실패했을 경우에는 예외(error) 객체를 reject합니다.

fetch(url, options)
  .then((response) => console.log("response:", response))
  .catch((error) => console.log("error:", error));

옵션(options) 객체에는 HTTP 방식(method), 
HTTP 요청 헤더(headers), HTTP 요청 전문(body) 등을 설정해줄 수 있습니다. 
응답(response) 객체로 부터는 HTTP 응답 상태(status), 
HTTP 응답 헤더(headers), HTTP 응답 전문(body) 등을 읽어올 수 있습니다.

참고로 fetch() 함수는 엄밀히 말해, 
브라우저의 window 객체에 소속되어 있기 때문에 window.fetch()로 사용되기도 합니다.

2. Get 호출
먼저 단순히 원격 API에 있는 데이터를 가져올 때 
쓰이는 GET 방식의 HTTP 통신을 살펴볼까요?

JSON Placeholder라는 인터넷에 공개된 API를 사용해서 예제 코드를 작성해보겠습니다. 
(브라우저 콘솔을 열고 같이 코드를 작성하고 실행하시면서 
따라오시면 더 이해가 쉬우실 겁니다.)
https://jsonplaceholder.typicode.com/

fetch() 함수는 디폴트로 GET 방식으로 작동하고 
GET 방식은 요청 전문을 받지 않기 때문에 옵션 인자가 필요가 없습니다.