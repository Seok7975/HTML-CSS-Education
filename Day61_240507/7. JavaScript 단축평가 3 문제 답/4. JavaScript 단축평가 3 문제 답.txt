다음의 실행 결과는?
(크롬에서 주소표시줄에 about:blank을 타이핑하고 F12를 console창에서 확인하시오.

1. console.log('Cat' && 'Dog');
Dog

2. console.log('Cat' || 'Dog');
Cat

3. console.log(true || 'anything'); // true면 바로 반환(앞)
true

4. console.log(false || 'anything'); 
anything

5. console.log(true && 'anything'); // true면 뒤
anything

6. console.log(false && 'anything'); // false면 바로 반환(앞)
false

7. 
var done = true;
var message = '';
if (done) message = '완료';
message = done && '완료';
console.log(message);

완료

8. 
var done = false;
var message = '';

if (done) message = '미완료'

message = done || '미완료';
console.log(message);

미완료

9.
var done = true;
var message = '';

if (done) message = '완료'
else	  message = '미완료'
console.log(message); 
// 완료
message = done ? '완료' : '미완료';
console.log(message); 
// 완료

10.
var elem = null;
var value = elem.value; // TypeError: Cannot read property 'value' of null

11. 
var elem = null;
// elem이 null이나 undefined와 같은 Falsy 값이면 elem으로 평가
// elem이 Truthy 값이면 elem.value로 평가
var value = elem && elem.value; // null

12.
// ES6, 정식 명칭으로 ECMAScript 2015는 JavaScript의 표준을 정의하는 
// ECMAScript 언어 사양의 6번째 주요 개정판입니다. 
// 2015년에 공식 발표되었으며, 이전 버전인 ES5(2009년 발표) 이후 
// 가장 큰 변화를 가져온 업데이트로 평가받습니다. 
// ES6는 JavaScript 개발에 많은 새로운 기능과 개선 사항을 도입했으며, 
// 이를 통해 더욱 효율적이고 간결한 코드 작성이 가능해졌습니다.

// 단축 평가를 사용한 매개변수의 기본값 설정
function getStringLength(str) {
  str = str || '';
  return str.length;
}

getStringLength(); // 0
getStringLength('hi'); // 2

12-1
// ES6의 매개변수의 기본값 설정
//
function getStringLength(str = '') {
  return str.length
}

getStringLength(); // 0
getStrringLength('hi'); // 2

13. 
// ?. : 옵셔널 체이닝 연산자(Optional Chaining Operator)
// 프로퍼티 값이 null이나 undefined인 경우에 에러를 발생시키지 않고 
// undefined를 반환하는 안전한 방법으로 객체의 프로퍼티에 
// 접근할 수 있게 해주는 JavaScript의 표현식

var elem = null;

// elem이 null또는 undefined이면 undefined 반환, 
// 그렇지 않으면 우항의 프로퍼티 참조를 이어감
var value = elem?.value;
console.log(value); // undefined

14.
var elem = null;

// elem이 Falsy 값이면 elem으로 평가, elem이 Truthy 값이면 elem.value로 평가
var value = elem&&elem.value;
console.log(value); // null

15.
var str = '';

var length = str && str.length;

// 문자열의 길이를 참조하지 못함
console.log(length); // ''

16.
var str = '';

var length = str?.length;
console.log(length); // 0

17. 
// ?? : 널 병합 연산자(Nullish Coalescing Operator)
// null이나 undefined 값을 체크할 때 사용되는 연산자
// 왼쪽 피연산자가 null이나 undefined인 경우에만 
// 오른쪽 피연산자의 값을 반환합니다. 그렇지 않은 경우에는 왼쪽 피연산자의 값을 반환
var foo = null ?? 'default string';
console.log(foo); // "default string"

18.
var foo = '' || 'default string';
console.log(foo); // "default string"

19.
var foo = '' ?? 'default string';
console.log(foo); // ''