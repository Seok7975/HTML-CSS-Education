다음의 실행 결과는?
(크롬에서 주소표시줄에 about:blank을 타이핑하고 F12를 console창에서 확인하시오.

1. console.log('Cat' && 'Dog');
Dog

2. console.log('Cat' || 'Dog');
Cat

3. console.log(true || 'anything');
true

4. console.log(false || 'anything'); 
anything

5. console.log(true && 'anything');
anything

6. console.log(false && 'anything');
false

7. 
var done = true;
var message = '';
if (done) message = '완료';
message = done && '완료';
console.log(message);

완료

8. 
var done = false;
var message = '';

if (done) message = '미완료'

message = done || '미완료';
console.log(message);

미완료

9.
var done = true;
var message = '';

if (done) message = '완료'
else	  message = '미완료'
console.log(message); 
// 완료
message = done ? '완료' : '미완료';
console.log(message); 
// 완료

10.
var elem = null;
var value = elem.value; // TypeError: Cannot read property 'value' of null

11. 
var elem = null;
// elem이 null이나 undefined와 같은 Falsy 값이면 elem으로 평가
// elem이 Truthy 값이면 elem.value로 평가
var value = elem && elem.value; // null

12.
// 단축 평가를 사용한 매개변수의 기본값 설정
function getStringLength(str) {
  str = str || '';
  return str.length;
}

getStringLength(); // 0
getStringLength('hi'); // 2

12-1
// ES6의 매개변수의 기본값 설정
function getStringLength(str = '') {
  return str.length
}

getStringLength(); // 0
getStrringLength('hi'); // 2

13.
var elem = null;

// elem이 null또는 undefined이면 undefined 반환, 그렇지 않으면 우항의 프로퍼티 참조를 이어감
var value = elem?.value;
console.log(value); // undefined

14.
var elem = null;

// elem이 Falsy 값이면 elem으로 평가, elem이 Truthy 값이면 elem.value로 평가
var value = elem&&elem.value;
console.log(value); // null

15.
var str = '';

var length = str && str.length;

// 문자열의 길이를 참조하지 못함
console.log(length); // ''

16.
var str = '';

var length = str?.length;
console.log(length); // 0

17.
var foo = null ?? 'default string';
console.log(foo); // "default string"

18.
var foo = '' || 'default string';
console.log(foo); // "default string"

19.
var foo = '' ?? 'default string';
console.log(foo); // ''